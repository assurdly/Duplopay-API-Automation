{"uid":"31043896bea2c9be","name":"Create Dedicated Virtual Account","fullName":"Virtual accounts/Create Virtual Account#Create Dedicated Virtual Account","historyId":"8d84b8e3-c2ae-421f-9a09-e39297075fd2","time":{"start":1710339194944,"stop":1710339195171,"duration":227},"description":"The Dedicated Virtual Account API enables Nigerian merchants to manage unique payment accounts of their customers.\n\n##### Feature Availability\n\nThis feature is only available to businesses in Nigeria.\n\n#### Create Dedicated Virtual Account\n\nCreate a dedicated virtual account and assign to a customer\n\nEndpoint: /dedicated_virtual_account  \nMethod: POST\n\n##### Bank Availability\n\nWe currently support Wema Bank only.\n\n#### Header\n\n| Param | Type | Required? | Decription |\n| --- | --- | --- | --- |\n| _authorization_ | string | Yes | Set value to _Bearer SECRET_KEY_ |\n| _content-type_ | string | Yes | Set value to _application/json_ |\n\n#### Body Param\n\n| Param | Type | Required? | Decription |\n| --- | --- | --- | --- |\n| _customer_ | string | Yes | Customer code |\n| _first_name_ | string | No | Customer's first name |\n| _last_name_ | string | No | Customer's last name |\n| _phone_ | string | No | Customer's phone number |\n\n##### Testing Dedicated Virtual Accounts\n\nTo create Dedicated Virtual Accounts for testing, simply use your test secret key to generate the dedicated account number. And get your payment approved automatically.","descriptionHtml":"The Dedicated Virtual Account API enables Nigerian merchants to manage unique payment accounts of their customers.<br><br>##### Feature Availability<br><br>This feature is only available to businesses in Nigeria.<br><br>#### Create Dedicated Virtual Account<br><br>Create a dedicated virtual account and assign to a customer<br><br>Endpoint: /dedicated_virtual_account  <br>Method: POST<br><br>##### Bank Availability<br><br>We currently support Wema Bank only.<br><br>#### Header<br><br>| Param | Type | Required? | Decription |<br>| --- | --- | --- | --- |<br>| _authorization_ | string | Yes | Set value to _Bearer SECRET_KEY_ |<br>| _content-type_ | string | Yes | Set value to _application/json_ |<br><br>#### Body Param<br><br>| Param | Type | Required? | Decription |<br>| --- | --- | --- | --- |<br>| _customer_ | string | Yes | Customer code |<br>| _first_name_ | string | No | Customer's first name |<br>| _last_name_ | string | No | Customer's last name |<br>| _phone_ | string | No | Customer's phone number |<br><br>##### Testing Dedicated Virtual Accounts<br><br>To create Dedicated Virtual Accounts for testing, simply use your test secret key to generate the dedicated account number. And get your payment approved automatically.","status":"failed","statusMessage":"Status code is 200, Response contains status, data, and message properties","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"The Dedicated Virtual Account API enables Nigerian merchants to manage unique payment accounts of their customers.\n\n##### Feature Availability\n\nThis feature is only available to businesses in Nigeria.\n\n#### Create Dedicated Virtual Account\n\nCreate a dedicated virtual account and assign to a customer\n\nEndpoint: /dedicated_virtual_account  \nMethod: POST\n\n##### Bank Availability\n\nWe currently support Wema Bank only.\n\n#### Header\n\n| Param | Type | Required? | Decription |\n| --- | --- | --- | --- |\n| _authorization_ | string | Yes | Set value to _Bearer SECRET_KEY_ |\n| _content-type_ | string | Yes | Set value to _application/json_ |\n\n#### Body Param\n\n| Param | Type | Required? | Decription |\n| --- | --- | --- | --- |\n| _customer_ | string | Yes | Customer code |\n| _first_name_ | string | No | Customer's first name |\n| _last_name_ | string | No | Customer's last name |\n| _phone_ | string | No | Customer's phone number |\n\n##### Testing Dedicated Virtual Accounts\n\nTo create Dedicated Virtual Accounts for testing, simply use your test secret key to generate the dedicated account number. And get your payment approved automatically.","descriptionHtml":"The Dedicated Virtual Account API enables Nigerian merchants to manage unique payment accounts of their customers.<br><br>##### Feature Availability<br><br>This feature is only available to businesses in Nigeria.<br><br>#### Create Dedicated Virtual Account<br><br>Create a dedicated virtual account and assign to a customer<br><br>Endpoint: /dedicated_virtual_account  <br>Method: POST<br><br>##### Bank Availability<br><br>We currently support Wema Bank only.<br><br>#### Header<br><br>| Param | Type | Required? | Decription |<br>| --- | --- | --- | --- |<br>| _authorization_ | string | Yes | Set value to _Bearer SECRET_KEY_ |<br>| _content-type_ | string | Yes | Set value to _application/json_ |<br><br>#### Body Param<br><br>| Param | Type | Required? | Decription |<br>| --- | --- | --- | --- |<br>| _customer_ | string | Yes | Customer code |<br>| _first_name_ | string | No | Customer's first name |<br>| _last_name_ | string | No | Customer's last name |<br>| _phone_ | string | No | Customer's phone number |<br><br>##### Testing Dedicated Virtual Accounts<br><br>To create Dedicated Virtual Accounts for testing, simply use your test secret key to generate the dedicated account number. And get your payment approved automatically.","status":"failed","statusMessage":"Status code is 200, Response contains status, data, and message properties","steps":[{"name":"Status code is 200","time":{"start":1710339195168,"stop":1710339195168,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 409","statusTrace":"Error: expected response to have status code 200 but got 409\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response is a JSON object","time":{"start":1710339195168,"stop":1710339195168,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Response contains status, data, and message properties","time":{"start":1710339195169,"stop":1710339195170,"duration":1},"status":"failed","statusMessage":"expected { status: false, …(1) } to have property 'data'","statusTrace":"Error: expected { status: false, …(1) } to have property 'data'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:16:33)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:12:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"1869605fc3e6a2f4","name":"Request Headers","source":"1869605fc3e6a2f4.json","type":"application/json","size":414},{"uid":"91d98222934bc139","name":"Request Body","source":"91d98222934bc139.txt","type":"text/plain","size":41},{"uid":"96f134170295c159","name":"Response Headers","source":"96f134170295c159.json","type":"application/json","size":276},{"uid":"daf4de8cbdc835cf","name":"Response Body","source":"daf4de8cbdc835cf.txt","type":"text/plain","size":75}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Virtual accounts"},{"name":"suite","value":"Create Virtual Account"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://api.duplopg.com/api/v2/dedicated_virtual_account"},{"name":"Response Code","value":"409"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"31043896bea2c9be.json","parameterValues":["POST - https://api.duplopg.com/api/v2/dedicated_virtual_account","409"]}