{"uid":"801cc2c3d6829339","name":"Create Customer with empty phone number field","fullName":"Customers/Create Customer#Create Customer with empty phone number field","historyId":"2b9b3243-3038-465e-96fc-7d736bdd4f87","time":{"start":1710746321984,"stop":1710746322128,"duration":144},"description":"The Customers API allows you create and manage customers on your integration.\n\n#### Create Customer\n\nCreate a customer on your integration\n\nEndpoint: /customer  \nMethod: POST\n\n##### Customer Validation\n\nThe _first_name_, _last_name_ and _phone_ are optional parameters. However, when creating a customer that would be assigned to a Dedicated Virtual Account, then these parameters become compulsory or necessary.\n\n#### Header\n\n| Param | Type | Required? | Decription |\n| --- | --- | --- | --- |\n| _authorization_ | string | Yes | Set value to _Bearer SECRET_KEY_ |\n| _content-type_ | string | Yes | Set value to _application/json_ |\n\n#### Body Param\n\n| Param | Type | Required? | Decription |\n| --- | --- | --- | --- |\n| _email_ | string | Yes | Customer's email address |\n| _first_name_ | string | Yes | Customer's first name |\n| _last_name_ | string | Yes | Customer's last name |\n| _phone_ | string | No | Customer's phone number |\n| _metadata_ | string | No | A set of key/value pairs that you can attach to the customer. It can be used to store additional information in a structured format. |","descriptionHtml":"The Customers API allows you create and manage customers on your integration.<br><br>#### Create Customer<br><br>Create a customer on your integration<br><br>Endpoint: /customer  <br>Method: POST<br><br>##### Customer Validation<br><br>The _first_name_, _last_name_ and _phone_ are optional parameters. However, when creating a customer that would be assigned to a Dedicated Virtual Account, then these parameters become compulsory or necessary.<br><br>#### Header<br><br>| Param | Type | Required? | Decription |<br>| --- | --- | --- | --- |<br>| _authorization_ | string | Yes | Set value to _Bearer SECRET_KEY_ |<br>| _content-type_ | string | Yes | Set value to _application/json_ |<br><br>#### Body Param<br><br>| Param | Type | Required? | Decription |<br>| --- | --- | --- | --- |<br>| _email_ | string | Yes | Customer's email address |<br>| _first_name_ | string | Yes | Customer's first name |<br>| _last_name_ | string | Yes | Customer's last name |<br>| _phone_ | string | No | Customer's phone number |<br>| _metadata_ | string | No | A set of key/value pairs that you can attach to the customer. It can be used to store additional information in a structured format. |","status":"failed","statusMessage":"Response status code is 200, Response has a 'data' property that is an object, Each property in 'data' has the correct data type","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"The Customers API allows you create and manage customers on your integration.\n\n#### Create Customer\n\nCreate a customer on your integration\n\nEndpoint: /customer  \nMethod: POST\n\n##### Customer Validation\n\nThe _first_name_, _last_name_ and _phone_ are optional parameters. However, when creating a customer that would be assigned to a Dedicated Virtual Account, then these parameters become compulsory or necessary.\n\n#### Header\n\n| Param | Type | Required? | Decription |\n| --- | --- | --- | --- |\n| _authorization_ | string | Yes | Set value to _Bearer SECRET_KEY_ |\n| _content-type_ | string | Yes | Set value to _application/json_ |\n\n#### Body Param\n\n| Param | Type | Required? | Decription |\n| --- | --- | --- | --- |\n| _email_ | string | Yes | Customer's email address |\n| _first_name_ | string | Yes | Customer's first name |\n| _last_name_ | string | Yes | Customer's last name |\n| _phone_ | string | No | Customer's phone number |\n| _metadata_ | string | No | A set of key/value pairs that you can attach to the customer. It can be used to store additional information in a structured format. |","descriptionHtml":"The Customers API allows you create and manage customers on your integration.<br><br>#### Create Customer<br><br>Create a customer on your integration<br><br>Endpoint: /customer  <br>Method: POST<br><br>##### Customer Validation<br><br>The _first_name_, _last_name_ and _phone_ are optional parameters. However, when creating a customer that would be assigned to a Dedicated Virtual Account, then these parameters become compulsory or necessary.<br><br>#### Header<br><br>| Param | Type | Required? | Decription |<br>| --- | --- | --- | --- |<br>| _authorization_ | string | Yes | Set value to _Bearer SECRET_KEY_ |<br>| _content-type_ | string | Yes | Set value to _application/json_ |<br><br>#### Body Param<br><br>| Param | Type | Required? | Decription |<br>| --- | --- | --- | --- |<br>| _email_ | string | Yes | Customer's email address |<br>| _first_name_ | string | Yes | Customer's first name |<br>| _last_name_ | string | Yes | Customer's last name |<br>| _phone_ | string | No | Customer's phone number |<br>| _metadata_ | string | No | A set of key/value pairs that you can attach to the customer. It can be used to store additional information in a structured format. |","status":"failed","statusMessage":"Response status code is 200, Response has a 'data' property that is an object, Each property in 'data' has the correct data type","steps":[{"name":"Response status code is 200","time":{"start":1710746322124,"stop":1710746322124,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"Error: expected response to have status code 200 but got 401\n    at eval (eval at exec (evalmachine.<anonymous>:66:1818546), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:11560)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1818546), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1818581)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8225)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response has a 'status' property of type boolean","time":{"start":1710746322124,"stop":1710746322124,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Response has a 'message' property of type string","time":{"start":1710746322125,"stop":1710746322125,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Response has a 'data' property that is an object","time":{"start":1710746322126,"stop":1710746322126,"duration":0},"status":"failed","statusMessage":"expected { status: false, …(1) } to have property 'data'","statusTrace":"Error: expected { status: false, …(1) } to have property 'data'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1818546), <anonymous>:17:43)\n    at e.test (evalmachine.<anonymous>:66:11560)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1818546), <anonymous>:16:4)\n    at u.exec (evalmachine.<anonymous>:66:1818581)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8225)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Each property in 'data' has the correct data type","time":{"start":1710746322126,"stop":1710746322126,"duration":0},"status":"failed","statusMessage":"Cannot convert undefined or null to object","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"aa05e58d475287d6","name":"Request Headers","source":"aa05e58d475287d6.json","type":"application/json","size":415},{"uid":"96e9ac40fa117fc","name":"Request Body","source":"96e9ac40fa117fc.txt","type":"text/plain","size":123},{"uid":"fa76fe949c9a3e88","name":"Response Headers","source":"fa76fe949c9a3e88.json","type":"application/json","size":276},{"uid":"288d679afd3bcde4","name":"Response Body","source":"288d679afd3bcde4.txt","type":"text/plain","size":51}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Customers"},{"name":"suite","value":"Create Customer"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://api.duplopg.com/api/v2/customer"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"801cc2c3d6829339.json","parameterValues":["POST - https://api.duplopg.com/api/v2/customer","401"]}